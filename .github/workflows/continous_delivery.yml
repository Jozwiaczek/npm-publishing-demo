name: Release
on:
  push:
    branches:
      - master
      - next
      - beta
      - '*.x' # maintenance releases branches

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: 'Git checkout'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false

      # Beginning of yarn setup, keep in sync between all workflows
      - name: Use node.js 12
        uses: actions/setup-node@v2.1.5
        with:
          node-version: '12'
          check-latest: true
      - name: 'Use cached node_modules'
        id: cache-modules
        uses: actions/cache@v2.1.4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-v${{ matrix.node-version }}-node_modules-${{ hashFiles('yarn.lock', '**/package.json') }}
      - name: 'Find location of global yarn cache'
        id: yarn-cache
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: 'Cache global yarn cache'
        uses: actions/cache@v2.1.4
        if: steps.cache-modules.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: 'Install dependency'
        run: yarn install --frozen-lockfile

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          TMP: 'hello word'
        run: npx semantic-release
